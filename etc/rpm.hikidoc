title: RPMの使い方
subject: etc
date.available: 2000-12-14
date.modified: 2007-02-09

実は、Linuxはめったに管理したことが無いので、
管理の仕方を知らなかったり、忘れたりすることが多いので、
まずはRPMの使い方から書いておきましょう。

!! RPMとは

RedHat Linuxが採用したパッケージ管理システムで、
多くのディストリビューションが採用している。
これを使うとソフトウェアの依存関係に基づく管理が簡単に行え、
ソフトウェアのインストール作業が便利になるというもの。
また、ソフトウェアの配布を行う側でも
多くのサイトでRPM形式でのバイナリ配布が行われている。

!! RPMを使ったインストール

例えば、hogehoge-1.0.0-k1.rpm を入手したら、
インストール権限を持つユーザ（root）になって、
以下のコマンドを打つ。
 # rpm -ivh hogehoge-1.0.0-k1.i386.rpm
以上だけで、インストールは完了となる。

もし、依存関係などに問題がでた場合は、
必要とされるソフトをインストールしておく。
もしも、強制的にインストールしたいときは、
{{code --nodeps}}オプションをつける。

また、ソフトウェアを更新したい場合は、
 # rpm -Fvh hogehoge-2.0.0-k1.i386.rpm
とする。
（{{code -F}}オプションは更新を表す）

!!SRPMを使ったインストール
sparcなどintel系以外のアーキテクチャ用のRPMは提供されていないことがある。
その場合の配布方法がSRPMのようだ。
これは「ソースファイル＋パッチ＋Specファイル」からなっており、
実際にソフトウェアをその計算機上でコンパイルし、
そのアーキテクチャ用のRPMを独自に作れるようにしたもの。

SRPMからインストールしたい場合は、
例えば、hogehoge-1.0.0-k1.src.rpm を入手したら、
インストール権限を持つユーザ（root）になって、
以下のコマンドを打つ。
 # rpm --rebuild hogehoge-1.0.0-k1.src.rpm
これで、そのアーキテクチャ向きのRPMパッケージがつくられ、
{{code /usr/src/redhat/RPMS}}に置かれる。
あとは、先ほどと同様に、
 # cd /usr/src/redhat/RPMS
 # rpm -ivh hogehoge-1.0.0-k1.sparc.rpm
とすれば、インストールが完了する。

!! 参考URLなど
*[[www.rpm.org|http://www.rpm.org/]]: RPMソフトウェアの開発元
*[[RPMによるパッケージ管理|http://www.redhat.co.jp/manual/Doc72/RH-DOCS/rhl-cg-ja-7.2/ch-rpm.html]]: RedHat Linux 7.2J のマニュアル。
