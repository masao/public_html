#!/usr/bin/env ruby
# $Id$

require "date"
require "mailread"
require "kconv"
require "yaml"

require "~/public_html/software/bs-tokens"

max_tokens = 20
max_iterates = 10
cutoff = 0.95
result = []

case basename = File.basename($0)
when /(tospam|toclean)/
   $mode = $1
else
   raise "unknown mode"
end

def logfile(mode)
   "#{ENV["HOME"]}/.bsfilter/#{mode}.log"
end
def bsfilter_option(mode)
   case mode
   when "tospam"
      "--show-new-token --sub-clean --add-spam  --update"
   when "toclean"
      "--show-new-token --sub-spam  --add-clean --update"
   end
end

ARGV.each do |fname|
   result = {}
   m = Mail.new(open(fname))
   ["from", "subject", "message-id"].each do |h|
      if m[h]
         result[h] = m[h].toeuc
      end
   end
   result["log"] = []
   result["now"] = Time.now
   max_iterates.times do |i|
      probs = bsfilter_probs(fname)
      probs["word"] = probs["word"][0..max_tokens-1].map{|e| e.join(" ") }
      result["log"] << probs
      STDERR.puts "-- bs-#{$mode}: #{i} (#{probs["all"]})"
      break if i != 0 and $mode == "tospam" ? probs["all"] > cutoff : probs["all"] < cutoff
      system "bsfilter #{bsfilter_option($mode)} #{fname}"
   end
   open(logfile($mode), "a") do |log|
      log.puts result.to_yaml
   end
end
